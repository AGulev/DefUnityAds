local dirtylarry = require "dirtylarry/dirtylarry"

local function print_placement_state(placement)
  local state = unityads.getPlacementState(placement)
  if state == unityads.PLACEMENT_STATE_READY then
    print("PLACEMENT_STATE_READY ", placement)
  elseif state == unityads.PLACEMENT_STATE_NOT_AVAILABLE then
    print("PLACEMENT_STATE_NOT_AVAILABLE ", placement)
  elseif state == unityads.PLACEMENT_STATE_DISABLED then
    print("PLACEMENT_STATE_DISABLED ", placement)
  elseif state == unityads.PLACEMENT_STATE_WAITING then
    print("PLACEMENT_STATE_WAITING ", placement)
  elseif state == unityads.PLACEMENT_STATE_NO_FILL then
    print("PLACEMENT_STATE_NO_FILL ", placement)
    end
end

local function btn_ready(self, placementId)
  gui.set_color(gui.get_node(placementId.."/larrylabel"), vmath.vector4(1,1,1,1))
end

function init(self)
  msg.post(".", "acquire_input_focus")
  if unityads then
    print("VERSION IS: ", unityads.getVersion())
    print("DEBUG MODE IS:", unityads.getDebugMode())
    print("isInitialized:", unityads.isInitialized())
    print("isSupported:", unityads.isSupported())
    print("isReady video:", unityads.isReady("video"))
    print("isReady rewardedVideo:", unityads.isReady("rewardedVideo"))
    print_placement_state("video")
    print_placement_state("rewardedVideo")
    unityads.setDebugMode(true)

    unityads.isReady() -- deprecated, you have to use placementID
  end
end

local function unity_ads_callback(self, msg_type, message)
  if msg_type == unityads.TYPE_IS_READY then
    print(message.placementId," is ready")
    btn_ready(self, message.placementId)
  elseif msg_type == unityads.TYPE_DID_START then
    print(message.placementId," started")
  elseif msg_type == unityads.TYPE_DID_ERROR then
    print(message.message)
    -- errors info https://github.com/Unity-Technologies/unity-ads-ios/wiki/sdk_ios_api_errors
    if message.error == unityads.ERROR_NOT_INITIALIZED then
      print("kUnityAdsErrorNotInitialized")
    elseif message.error == unityads.ERROR_INITIALIZED_FAILED then
      print("kUnityAdsErrorInitializedFailed")
    elseif message.error == unityads.ERROR_INVALID_ARGUMENT then
      print("kUnityAdsErrorInvalidArgument")
    elseif message.error == unityads.ERROR_VIDEO_PLAYER then
      print("kUnityAdsErrorVideoPlayerError")
    elseif message.error == unityads.ERROR_INIT_SANITY_CHECK_FAIL then
      print("kUnityAdsErrorInitSanityCheckFail")
    elseif message.error == unityads.ERROR_AD_BLOCKER_DETECTED then
      print("kUnityAdsErrorAdBlockerDetected")
    elseif message.error == unityads.ERROR_FILE_IO then
      print("kUnityAdsErrorFileIoError")
    elseif message.error == unityads.ERROR_DEVICE_ID then
      print("kUnityAdsErrorDeviceIdError")
    elseif message.error == unityads.ERROR_SHOW then
      print("kUnityAdsErrorShowError")
    elseif message.error == unityads.ERROR_INTERNAL then
      print("kUnityAdsErrorInternalError")
    end
  elseif msg_type == unityads.TYPE_DID_FINISH then
    --all finish states info https://github.com/Unity-Technologies/unity-ads-ios/wiki/sdk_ios_api_finishstates
    if message.state == unityads.FINISH_STATE_ERROR then
      print("kUnityAdsFinishStateError")
    elseif message.state == unityads.FINISH_STATE_SKIPPED then
      print("kUnityAdsFinishStateSkipped")
    elseif message.state == unityads.FINISH_STATE_COMPLETED then
      print("kUnityAdsFinishStateCompleted")
    end
  end
end

local function init_unity_ads(self, appId)
  if unityads and appId then
    print("Init SDK with id", appId)
    unityads.initialize(appId, unity_ads_callback, true)
  end
end

local function show_ad(self, placementId)
  if unityads then
    if placementId then
      unityads.show(placementId)
    else
      unityads.show() -- deprecated, you have to use placementID
    end
  end
end

function on_input(self, action_id, action)
  self.input_default  = dirtylarry:input("input", action_id, action, gui.KEYBOARD_TYPE_DEFAULT, "AppId")
  dirtylarry:button("init", action_id, action, function ()
    if self.input_default == "Empty" then
      if sys.get_sys_info().system_name == "Android" then
        self.input_default  = "1401815"
      elseif sys.get_sys_info().system_name == "iPhone OS" then
        self.input_default  = "1425385"
      end
    end
    init_unity_ads(self, self.input_default)
  end)
  dirtylarry:button("rewardedVideo", action_id, action, function ()
    print_placement_state("rewardedVideo")
    show_ad(self, "rewardedVideo")
  end)
  dirtylarry:button("video", action_id, action, function ()
    print_placement_state("video")
    show_ad(self, "video")
  end)
  
  dirtylarry:button("default", action_id, action, function ()
    show_ad(self)
  end)
end